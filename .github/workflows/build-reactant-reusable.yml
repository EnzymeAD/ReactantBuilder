name: "Build Reactant_jll"

on:
  workflow_call:
    inputs:
      julia_version:
        description: 'Julia version'
        required: false
        type: string
        default: '1.7.3'
      os:
        description: 'OS/Runner'
        required: false
        type: string
        default: 'jll'
      build_project:
        description: 'The project to build'
        required: false
        type: string
        default: 'R/Reactant'
      reactantbuilder_ref:
        description: 'The Git ref of EnzymeAD/ReactantBuilder to check out (leave empty to use the default)'
        required: false
        type: string
        default: ''
      enzyme_jax_commit:
        description: 'The Git commit of EnzymeAD/Enzyme-JAX to use for the build (leave empty to use the default)'
        required: false
        type: string
        default: ''
      reactant_commit:
        description: 'The Git commit of Reactant to use in build_tarballs.jl (empty to leave it unchanged)'
        required: false
        type: string
        default: ''

env:
  BINARYBUILDER_AUTOMATIC_APPLE: true
  BINARYBUILDER_RUNNER: privileged
  # BINARYBUILDER_NPROC: 36
  BINARYBUILDER_USE_CCACHE: true
  JULIA_REGISTRYCI_AUTOMERGE: true

jobs:
  define-matrix:
    name: Define matrix
    runs-on: 'ubuntu-latest'

    outputs:
      platforms: ${{ steps.gen-platforms.outputs.platforms }}

    steps:
      - name: Set JULIA_PROJECT
        # We have to use `${GITHUB_WORKSPACE}` instead of `github.workspace` because GitHub
        # is terrible and the two don't match inside containers:
        # https://github.com/actions/runner/issues/2058
        run:
          echo "JULIA_PROJECT=${GITHUB_WORKSPACE}/.ci" >> "${GITHUB_ENV}"
      - name: Cleanup
        timeout-minutes: 5
        shell: bash
        run: |
          if [[ -f ./clean_builds.sh ]]; then
              sudo ./clean_builds.sh
          fi
          if [[ -f ./clean_products.sh ]]; then
              sudo ./clean_products.sh
          fi
      - uses: actions/checkout@v5
        with:
          repository: 'EnzymeAD/ReactantBuilder'
          ref: ${{ inputs.reactantbuilder_ref == '' && github.sha || inputs.reactantbuilder_ref }}
      - uses: julia-actions/setup-julia@v2
        with:
          version: '${{ inputs.julia_version }}'
      - name: Load Julia packages from cache
        id: julia-cache
        uses: julia-actions/cache@v2
      - name: Instantiate environment
        timeout-minutes: 20
        shell: julia --color=yes {0}
        run: |
          using Pkg
          Pkg.instantiate()
      - name: Change Reactant commit
        run: |
          if [[ -n "${{ inputs.reactant_commit }}" ]]; then
              echo 'Changing Reactant commit to ${{ inputs.reactant_commit }}...'
              sed -i 's/reactant_commit = ".*"/reactant_commit = "'${{ inputs.reactant_commit }}'"/' R/Reactant/build_tarballs.jl
          fi
      - name: Generate list of platforms
        id: gen-platforms
        shell: julia --color=yes {0}
        # Adapted from <https://github.com/JuliaPackaging/Yggdrasil/blob/e6019028ad8dafb9507b9d9f4d09d04b11640461/.buildkite/generator.jl>.
        run: |
          TEMP = mktempdir()
          NAME = basename("${{ inputs.build_project }}")
          exec(cmd) = @assert success(pipeline(cmd; stderr=stderr, stdout=stdout))
          julia(args) = `$(Base.julia_cmd()) $(args)`

          cd("${{ inputs.build_project }}") do
              @info "Generating meta.json..."
              JSON_PATH = "$(TEMP)/$(NAME).meta.json"
              julia(`--compile=min ./build_tarballs.jl --meta-json="$(JSON_PATH)"`) |> exec

              # Generate platforms
              julia(`$(ENV["GITHUB_WORKSPACE"])/.ci/generate_platforms.jl "$(JSON_PATH)" $(TEMP)/$(NAME).platforms.list`) |> exec
          end

          PLATFORMS = split(readchomp(joinpath(TEMP, "$(NAME).platforms.list")))
          if isempty(PLATFORMS)
              @error "Unable to determine the proper platforms" NAME
          end

          platforms = "platforms=[$(join(repr.(PLATFORMS), ','))]"

          open(ENV["GITHUB_OUTPUT"], "a") do io
              println(io, platforms)
          end
        env:
          ENZYME_JAX_COMMIT: ${{ inputs.enzyme_jax_commit }}

  build-platforms:
    name: Build ${{ matrix.platform }}
    runs-on: ${{ inputs.os }}

    needs: define-matrix
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJSON(needs.define-matrix.outputs.platforms) }}

    steps:
      - name: Set JULIA_PROJECT
        # We have to use `${GITHUB_WORKSPACE}` instead of `github.workspace` because GitHub
        # is terrible and the two don't match inside containers:
        # https://github.com/actions/runner/issues/2058
        run:
          echo "JULIA_PROJECT=${GITHUB_WORKSPACE}/.ci" >> "${GITHUB_ENV}"
      - name: Set and create Julia depot path
        run: |
          # Set a different depot path for each runner, to avoid clashes
          JULIA_DEPOT_PATH="${HOME}/.jll-julia-depot/${{ runner.name }}"
          echo "JULIA_DEPOT_PATH=${JULIA_DEPOT_PATH}:" >> "${GITHUB_ENV}"
          # Make sure the depot exists
          mkdir -pv "${JULIA_DEPOT_PATH}"
      - name: Set and create ccache directory
        run: |
          # The ccache directory is thread-safe and so can be the same for all
          # runners, but we need to set it specifically
          BINARYBUILDER_CCACHE_DIR="${HOME}/.jll-ccache-dir"
          echo "BINARYBUILDER_CCACHE_DIR=${BINARYBUILDER_CCACHE_DIR}" >> "${GITHUB_ENV}"
          # Make sure the ccache directory exists
          mkdir -pv "${BINARYBUILDER_CCACHE_DIR}"
      - name: Cleanup
        timeout-minutes: 5
        shell: bash
        run: |
          if [[ -f ./clean_builds.sh ]]; then
              sudo ./clean_builds.sh
          fi
          if [[ -f ./clean_products.sh ]]; then
              sudo ./clean_products.sh
          fi
      - uses: actions/checkout@v5
        with:
          repository: 'EnzymeAD/ReactantBuilder'
          ref: ${{ inputs.reactantbuilder_ref == '' && github.sha || inputs.reactantbuilder_ref }}
      - uses: julia-actions/setup-julia@v2
        with:
          version: '${{ inputs.julia_version }}'
      # - name: Load Julia packages from cache
      #   id: julia-cache
      #   uses: julia-actions/cache@v2
      - name: Instantiate environment
        timeout-minutes: 20
        shell: julia --color=yes {0}
        run: |
          using Pkg
          Pkg.instantiate()
      - name: Change Reactant commit
        run: |
          if [[ -n "${{ inputs.reactant_commit }}" ]]; then
              echo 'Changing Reactant commit to ${{ inputs.reactant_commit }}...'
              sed -i 's/reactant_commit = ".*"/reactant_commit = "'${{ inputs.reactant_commit }}'"/' R/Reactant/build_tarballs.jl
          fi
      - name: Build Reactant
        run: |
          julia --color=yes --threads=16 build_tarballs.jl --verbose ${{ matrix.platform }}
        working-directory: ${{ inputs.build_project }}
        env:
          ENZYME_JAX_COMMIT: ${{ inputs.enzyme_jax_commit }}
      - uses: actions/upload-artifact@v5
        with:
          name: products-${{ matrix.platform }}
          path: ${{ inputs.build_project }}/products
          compression-level: 0
          retention-days: 2
      - name: Cleanup
        if: ${{ always() }}
        timeout-minutes: 5
        run: |
          sudo ./clean_builds.sh
          sudo ./clean_products.sh

  register:
    name: Register
    runs-on: 'ubuntu-latest'
    # We don't register the package when we're running CI for Enzyme-JAX.
    if: ${{ inputs.enzyme_jax_commit == '' }}

    needs: build-platforms

    steps:
      - uses: actions/checkout@v5
        with:
          repository: 'EnzymeAD/ReactantBuilder'
          ref: ${{ inputs.reactantbuilder_ref == '' && github.sha || inputs.reactantbuilder_ref }}
      - uses: julia-actions/setup-julia@v2
        with:
          version: '${{ inputs.julia_version }}'
      - name: Load Julia packages from cache
        id: julia-cache
        uses: julia-actions/cache@v2
      - uses: actions/download-artifact@v5
        with:
          merge-multiple: true
      - name: Change Reactant commit
        run: |
          if [[ -n "${{ inputs.reactant_commit }}" ]]; then
              echo 'Changing Reactant commit to ${{ inputs.reactant_commit }}...'
              sed -i 's/reactant_commit = ".*"/reactant_commit = "'${{ inputs.reactant_commit }}'"/' R/Reactant/build_tarballs.jl
          fi
      - name: Check
        run: |
          pwd
          ls -lhrt
